function [PERCEPTRON] = train_perceptron_network(PERCEPTRON, TRAINING_SET)
    LEARNING_RATE = 0.7;
    ERRORS = zeros(1,length(TRAINING_SET));
    TRAINING_SET_DIMENSTIONS = size(TRAINING_SET);
    MAX_ITERATIONS = 10;
    ITERATION = 0;
    KEEP_TRAINING = true;
    
    while KEEP_TRAINING && ITERATION < MAX_ITERATIONS
    
        for i=1:TRAINING_SET_DIMENSTIONS(1)
            SET = TRAINING_SET(i,1:3);
            PERCEPTRON = run_perceptron_network(PERCEPTRON, SET(1:3));

            ERRORS(i) = TRAINING_SET(4) - PERCEPTRON.FINAL_LAYER_RESULT;
            if(ERRORS(i) ~= 0)
                PERCEPTRON.FINAL_LAYER_WEIGHTS = PERCEPTRON.FINAL_LAYER_WEIGHTS + LEARNING_RATE * ERRORS(i) * [PERCEPTRON.MID_LAYER_RESULTS 1];
                PERCEPTRON.MID_LAYER_WEIGHTS = PERCEPTRON.MID_LAYER_WEIGHTS + LEARNING_RATE * ERRORS(i) * [SET(1:3) 1];
            end
        end
        
        ITERATION = ITERATION + 1;
        KEEP_TRAINING = sum(ERRORS.*ERRORS) ~= 0;
    end
end
